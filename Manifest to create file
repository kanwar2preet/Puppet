#
# Puppet Manifest below creates a file and named info in / directory 


node 'puppet-learn' {
  file { '/info.txt':
  	ensure => 'present',
  	content => inline_template ("Created by puppet at <%= Time.now %>\n"),
  }
}

###### if we run puppet apply followed by file name then it should create a new file info.txt.
######   
###### If puppet apply is run again it will create a new file again becoz erb code will create a new time stamp 
###### which will result in different hashing of the file.
######
######




#file { 'resource title':
#  path                    => # (namevar) The path to the file to manage.  Must be fully...
# ensure                  => # Whether the file should exist, and if so what...
#  backup                  => # Whether (and how) file content should be backed...
# checksum                => # The checksum type to use when determining...
# checksum_value          => # The checksum of the source contents. Only md5...
# content                 => # The desired contents of a file, as a string...
# ctime                   => # A read-only state to check the file ctime. On...
# force                   => # Perform the file operation even if it will...
# group                   => # Which group should own the file.  Argument can...
# ignore                  => # A parameter which omits action on files matching 
# links                   => # How to handle links during file actions.  During 
# mode                    => # The desired permissions mode for the file, in...
# mtime                   => # A read-only state to check the file mtime. On...
# owner                   => # The user to whom the file should belong....
# provider                => # The specific backend to use for this `file...
# purge                   => # Whether unmanaged files should be purged. This...
# recurse                 => # Whether to recursively manage the _contents_ of...
# recurselimit            => # How far Puppet should descend into...
# replace                 => # Whether to replace a file or symlink that...
# selinux_ignore_defaults => # If this is set then Puppet will not ask SELinux...
# selrange                => # What the SELinux range component of the context...
# selrole                 => # What the SELinux role component of the context...
# seltype                 => # What the SELinux type component of the context...
# seluser                 => # What the SELinux user component of the context...
# show_diff               => # Whether to display differences when the file...
# source                  => # A source file, which will be copied into place...
# source_permissions      => # Whether (and how) Puppet should copy owner...
# sourceselect            => # Whether to copy all valid sources, or just the...
# target                  => # The target for creating a link.  Currently...
# type                    => # A read-only state to check the file...
# validate_cmd            => # A command for validating the file's syntax...
# validate_replacement    => # The replacement string in a `validate_cmd` that...
  # ...plus any applicable metaparameters.
#}




